{
	"info": {
		"name": "PhoneDB_API_Tests",
		"_postman_id": "98989526-1d65-e6c8-361c-d21f7ace3be3",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Phone Tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Successful request\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Has name\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(phone.name).to.not.eql(null);",
							"    });",
							"});",
							"",
							"pm.test(\"Brand defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"brand\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Cameras defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"cameras\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Carriers defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"carriers\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Codename defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"codename\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"display\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"hardware\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware Designer defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"hardware_designer\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Image defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"image\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Manufacturers defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"manufacturers\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Market Countries defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"market_countries\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Market Regions defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"market_regions\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Model defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"model\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Physical Attributes defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"physical_attributes\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Release Date defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"release_date\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Software defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"software\" in phone).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Aperture defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"aperture\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Camcorder defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"camcorder\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Digital Zoom defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"digital_zoom\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Flash defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"flash\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Focus defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"focus\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Module defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"module\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Number of Pixels defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"num_pixels\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Optical Zoom defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"optical_zoom\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera PLacement defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"placement\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Resolution defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"resolution\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Sensor defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"sensor\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Sensor Format defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            pm.expect(\"sensor_format\" in camera).to.eql(true);",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Camcorder Formats defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            if (camera.camcorder) {",
							"                pm.expect(\"formats\" in camera.camcorder).to.eql(true);",
							"            }",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Camera Camcorder Resolution defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        phone.cameras.forEach(function (camera) {",
							"            if (camera.camcorder) {",
							"                pm.expect(\"resolution\" in camera.camcorder).to.eql(true);",
							"            }",
							"        });",
							"    });",
							"});",
							"",
							"pm.test(\"Display Area Utilization defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"area_utilization\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Bezel Width defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"bezel_width\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Color Depth defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"color_depth\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Diagonal defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"diagonal\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Height defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"height\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Pixel Density defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"pixel_density\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Resolution defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"resolution\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Screen defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"screen\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Type defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"type\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Display Width defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"width\" in phone.display).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware CPU defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"cpu\" in phone.hardware).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware GPU defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"gpu\" in phone.hardware).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware Non-Volatile Memory defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"nonvolatile_memory\" in phone.hardware).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware RAM defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"ram\" in phone.hardware).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware CPU Additional Info defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.cpu",
							"            pm.expect(\"additional_info\" in phone.hardware.cpu).to.eql(true);",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Hardware CPU Clock Speed defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.cpu",
							"            pm.expect(\"clock_speed\" in phone.hardware.cpu).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware CPU Model defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.cpu",
							"            pm.expect(\"model\" in phone.hardware.cpu).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware GPU Clock Speed defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.gpu",
							"            pm.expect(\"clock_speed\" in phone.hardware.gpu).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware GPU Model defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.gpu",
							"            pm.expect(\"model\" in phone.hardware.gpu).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware NVM Capacity defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.nonvolatile_memory",
							"            pm.expect(\"capacity\" in phone.hardware.nonvolatile_memory).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware NVM Type defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.nonvolatile_memory",
							"            pm.expect(\"type\" in phone.hardware.nonvolatile_memory).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware RAM Capacity defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.ram",
							"            pm.expect(\"capacity\" in phone.hardware.ram).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Hardware RAM Type defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        if phone.hardware.ram",
							"            pm.expect(\"type\" in phone.hardware.ram).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Physical Attribute Depth defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"depth\" in phone.physical_attributes).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Physical Attribute Dimensions defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"dimensions\" in phone.physical_attributes).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Physical Attribute Height defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"height\" in phone.physical_attributes).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Physical Attribute Mass defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"mass\" in phone.physical_attributes).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Physical Attribute Width defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (phone) {",
							"        pm.expect(\"width\" in phone.physical_attributes).to.eql(true);",
							"    });",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://phonedb.info/models",
					"protocol": "http",
					"host": [
						"phonedb",
						"info"
					],
					"path": [
						"models"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "OS Tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Successful request\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Has name\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(os.name).to.not.eql(null);",
							"    });",
							"});",
							"",
							"pm.test(\"Brands defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"brands\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Codename defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"codename\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Developer defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"developer\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Image defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"image\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Models defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"models\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"OS Family defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"os_family\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"OS Kernel defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"os_kernel\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Predecessor defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"predecessor\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Release Date defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"release_date\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Successor defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"successor\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Supported CPU Instruction Sets defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"supported_cpu_instruction_sets\" in os).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Version defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (os) {",
							"        pm.expect(\"version\" in os).to.eql(true);",
							"    });",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://phonedb.info/os",
					"protocol": "http",
					"host": [
						"phonedb",
						"info"
					],
					"path": [
						"os"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Carrier Tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Successful request\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Has name\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (carrier) {",
							"        pm.expect(carrier.name).to.not.eql(null);",
							"    });",
							"});",
							"",
							"pm.test(\"Brands defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (carrier) {",
							"        pm.expect(\"brands\" in carrier).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Cellular Networks defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (carrier) {",
							"        pm.expect(\"cellular_networks\" in carrier).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Covered Countries defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (carrier) {",
							"        pm.expect(\"covered_countries\" in carrier).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Image defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (carrier) {",
							"        pm.expect(\"image\" in carrier).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Models defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (carrier) {",
							"        pm.expect(\"models\" in carrier).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Short Name defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (carrier) {",
							"        pm.expect(\"short_name\" in carrier).to.eql(true);",
							"    });",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://phonedb.info/carriers",
					"protocol": "http",
					"host": [
						"phonedb",
						"info"
					],
					"path": [
						"carriers"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Brand Tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Successful request\", function () {",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"Has name\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(brand.name).to.not.eql(null);",
							"    });",
							"});",
							"",
							"pm.test(\"Area Served defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"area_served\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Carriers defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"carriers\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Found Date defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"found_date\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Founders defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"founders\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Image defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"image\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Industries defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"industries\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Location defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"location\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"OSs defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"os\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Parent defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"parent\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Models defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"phone_models\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							"pm.test(\"Type defined\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function (brand) {",
							"        pm.expect(\"type\" in brand).to.eql(true);",
							"    });",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://phonedb.info/brands",
					"protocol": "http",
					"host": [
						"phonedb",
						"info"
					],
					"path": [
						"brands"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}